{"version":3,"file":"yup-phone-lite.cjs.js","sources":["../src/yup-phone-lite.ts"],"sourcesContent":["import * as Yup from 'yup';\nimport { isValidPhoneNumber } from 'libphonenumber-js';\nimport { CountryCode } from 'libphonenumber-js/types';\n\ndeclare module 'yup' {\n  export interface StringSchema {\n    /**\n     * Check for phone number validity.\n     *\n     * @param {String} [countryCode=US] The country code to check against.\n     * @param {String} [errorMessage=DEFAULT_MESSAGE] returns error if failed validation\n     */\n    phone(countryCode?: CountryCode, errorMessage?: string): StringSchema;\n  }\n}\n\nconst YUP_PHONE_METHOD = 'phone';\nconst CLDR_REGION_CODE_SIZE = 2;\n\nconst isValidCountryCode = (countryCode: string | undefined): boolean => {\n  const isString = typeof countryCode === 'string';\n  const isValidCodeLength = countryCode?.length === CLDR_REGION_CODE_SIZE;\n\n  return isString && isValidCodeLength;\n};\n\nYup.addMethod(\n  Yup.string,\n  YUP_PHONE_METHOD,\n  function yupPhoneLite(countryCode?: CountryCode, errorMessage = '') {\n    if (!isValidCountryCode(countryCode)) {\n      // if not valid countryCode, then set default country to United States (US)\n      countryCode = 'US';\n    }\n\n    const errMsg =\n      typeof errorMessage === 'string' && errorMessage\n        ? errorMessage\n        : `\\${path} must be a valid phone number for region ${countryCode}`;\n\n    // @ts-ignore\n    return this.test(YUP_PHONE_METHOD, errMsg, (value: string) => {\n      try {\n        if (value === undefined || value === '') {\n          return true;\n        }\n\n        /* check if the countryCode provided should be used as\n          default country code or strictly followed\n        */\n        return isValidPhoneNumber(value, countryCode);\n      } catch {\n        return false;\n      }\n    });\n  }\n);\n"],"names":["YUP_PHONE_METHOD","CLDR_REGION_CODE_SIZE","isValidCountryCode","countryCode","isValidCodeLength","length","Yup","addMethod","string","yupPhoneLite","errorMessage","test","errMsg","value","undefined","isValidPhoneNumber","_unused"],"mappings":";0CAgBMA,iBAAmB,QACnBC,sBAAwB,EAExBC,mBAAqBA,QAAA,CAACC,CAAD,CAA6C,CAEtE,IAAMC,GAA+B,IAAA,EAAAD,CAAA,OAAA,EAAEE,CAAAA,MAAjCD,IAA4CH,qBAElD,OAHwC,QAGxC,GAHiB,MAAOE,EAGxB,EAAmBC,CAJmD,CAOxEE;cAAIC,CAAAA,SAAJD,CACEA,cAAIE,CAAAA,MADNF,CAEEN,gBAFFM,CAGEG,QAAA,CAAsBN,CAAtB,CAAiDO,CAAjD,CAAkE,CAAA,IAAA,EAAA,GAAjBA,CAAiB,GAAjBA,CAAiB,CAAF,EAAE,CAC3DR,mBAAAA,CAAmBC,CAAnBD,CAAL,GAEEC,CAFF,CAEgB,IAFhB,CAWA,OAAO,KAAKQ,CAAAA,IAAL,CAAUX,gBAAV,CALmB,QAAxBY,GAAA,MAAOF,EAAPE,EAAoCF,CAApCE,CACIF,CADJE,CAEwDT,kDAFxDS,CAEwDT,CAGnD,CAAoC,QAACU,CAAAA,CAAAA,CAAiB,CAC3D,GAAI,CACF,MAAcC,KAAAA,EAAd,GAAID,CAAJ,EAAqC,EAArC,GAA2BA,CAA3B,CACS,CAAA,CADT,CAOOE,gBAAkBA,CAAAA,kBAAlBA,CAAmBF,CAAnBE,CAA0BZ,CAA1BY,CARL,CASF,MAAMC,CAAN,CAAM,CACN,MAAO,CAAA,CADD,CAVmD,CAAtD,CAZyD,CAHpEV;"}