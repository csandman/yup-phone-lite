{"version":3,"file":"yup-phone-lite.cjs.js","sources":["../src/yup-phone-lite.ts"],"sourcesContent":["import * as Yup from \"yup\";\nimport { isValidPhoneNumber } from \"libphonenumber-js\";\nimport { CountryCode } from \"libphonenumber-js/types\";\n\ndeclare module \"yup\" {\n  export interface StringSchema {\n    /**\n     * Check for phone number validity.\n     *\n     * @param {String} [countryCode=US] The country code to check against.\n     * @param {String} [errorMessage=DEFAULT_MESSAGE] The error message to return if the validation fails.\n     */\n    phone(countryCode?: CountryCode, errorMessage?: string): StringSchema;\n  }\n}\n\nconst YUP_PHONE_METHOD = \"phone\";\nconst CLDR_REGION_CODE_SIZE = 2;\n\nconst isValidCountryCode = (countryCode: any): boolean =>\n  typeof countryCode === \"string\" &&\n  countryCode.length === CLDR_REGION_CODE_SIZE;\n\nYup.addMethod(\n  Yup.string,\n  YUP_PHONE_METHOD,\n  function yupPhoneLite(countryCode?: CountryCode, errorMessage: string = \"\") {\n    const errMsg =\n      typeof errorMessage === \"string\" && errorMessage\n        ? errorMessage\n        : isValidCountryCode(countryCode)\n        ? `\\${path} must be a valid phone number for region ${countryCode}`\n        : \"${path} must be a valid phone number.\";\n    // @ts-ignore\n    return this.test(YUP_PHONE_METHOD, errMsg, (value: string) => {\n      if (!isValidCountryCode(countryCode)) {\n        // if not valid countryCode, then set default country to United States (US)\n        countryCode = \"US\";\n      }\n\n      try {\n        /* check if the countryCode provided should be used as\n          default country code or strictly followed\n        */\n        return isValidPhoneNumber(value, countryCode);\n      } catch {\n        return false;\n      }\n    });\n  }\n);\n"],"names":["YUP_PHONE_METHOD","CLDR_REGION_CODE_SIZE","isValidCountryCode","countryCode","length","Yup.addMethod","Yup.string","yupPhoneLite","errorMessage","errMsg","test","value","isValidPhoneNumber"],"mappings":"kFAgBMA,iBAAmB,QACnBC,sBAAwB,EAExBC,mBAAqBA,QAAA,CAACC,CAAD,QACF,WAAvB,MAAOA,IACPA,CAAAC,UAAuBH,sBAEzBI;GAAAA,UAAAA,CACEC,GAAAA,OADFD,CAEEL,gBAFFK,CAGEE,QAAA,CAAsBJ,CAAtB,CAAiDK,CAAjD,CAA0E,UAAzBA,IAAAA,EAAuB,GAChEC,EAAAA,CACoB,QAAxB,GAAA,MAAOD,EAAP,EAAoCA,CAApC,CACIA,CADJ,CAEIN,kBAAA,CAAmBC,CAAnB,CAAA,mDAAA,CACoDA,CADpD,CAEA,8CAEC,KAAAO,KAAA,CAAUV,gBAAV,CAA4BS,CAA5B,CAAoC,SAACE,EAAiB,CACtDT,kBAAA,CAAmBC,CAAnB,IAEHA,EAAc,SAGZ,OAIKS,iBAAAA,mBAAAA,CAAmBD,CAAnBC,CAA0BT,CAA1BS,CAJL,CAKF,OAAA,CAAM,OACC,CAAA,CADD,CAXmD,CAAtD,CARiE,CAH5EP;"}